mean2 = sum/nr
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ sum(x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a =sumFuntion(v)
b = sumFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ sum(x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a =sumFuntion(v)
b = sumFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a =sumFuntion(v)
b = sumFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = i + nr
}
nr
}
getMean2 <- function(v){
a =sumFuntion(v)
b = sumFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = i + nr
}
nr
}
getMean2 <- function(v){
a =sumFuntion(v)
b = nrFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = i + nr
}
nr
}
getMean2 <- function(v){
a = sumFuntion(v)
b = nrFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a = sumFuntion(v)
b = nrFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
## by using seperate functions with lapply
sumCol <- sumFuntion(Cholestrole)
sumCol
sumlist <- lapply(mytable,sumFuntion)
nrlist <- lapply(mytable,nrFuntion)
getmean3 <- (sumlist/nrlist)
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
## by using seperate functions with lapply
sumCol <- sumFuntion(Cholestrole)
sumCol
sumlist <- lapply(mytable,sumFuntion)
nrlist <- lapply(mytable,nrFuntion)
getmean3 <- lapply (mytable,getMean2)
getmean3
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
## by using seperate functions with lapply
getmean3 <- lapply (mytable,getMean2)
getmean3
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
## by using seperate functions with lapply
getmean3 <- lapply (mytable,getMean2)
getmean3
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method by using seperate functions with lapply:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
##1) Save the data to a CSV file.
## This is heart data from kaggle for sample of people with heart disease include some medical informations from Clevland Research Center database, can be found on kaggle https://www.kaggle.com/ronitf/heart-disease-uci/version/1
heart <- data.frame(read.csv(file = 'C:/Users/Talal/Documents/GitHub/Data_Visualization/heart.csv'))
heart
##2) Create two vectors from two columns from the Dataframe. Be sure to name these appropriately.
#Age Column1
print ("AGE")
age <- heart[,1]
age
#sex Column ,  1 for male ,0 for female ,
print ("SEX")
sex <- heart[,2]
sex
#cheast pain from 0 to 3
print ("CheastPain")
CheastPain <- heart[,3]
CheastPain
#restbps resting blood pressure (in mm Hg on admission to the hospital)
print ("restbps")
restbps <- heart[,4]
restbps
#cholestrole serum cholestoral in mg/dl
print ("Cholestrole")
Cholestrole <- heart[,5]
Cholestrole
#Target 0 or 1
print ("Target")
Target <- heart[,14]
Target
##3) Using a for loop and seq_along, find the mean of the first vector. Store the mean in an appropriate variable.
getMean <- function(x){
for (i in seq_along(x)){
mean <- mean(x)
}
mean
}
AgeMean <- getMean(age)
print("AgeMean")
AgeMean
CholestroleMean <- getMean(Cholestrole)
print("CholestroleMean")
CholestroleMean
CheastPainMean <- getMean(CheastPain)
print("CheastPainMean")
CheastPainMean
restbpsMean <- getMean(restbps)
print("restbpsMean")
restbpsMean
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a = sumFuntion(v)
b = nrFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method by using seperate functions with lapply:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
##2) Create two vectors from two columns from the Dataframe. Be sure to name these appropriately.
#Age Column1
print ("AGE")
age <- heart[,1]
age
#sex Column ,  1 for male ,0 for female ,
print ("SEX")
sex <- heart[,2]
sex
#cheast pain from 0 to 3
print ("CheastPain")
CheastPain <- heart[,3]
CheastPain
#restbps resting blood pressure (in mm Hg on admission to the hospital)
print ("restbps")
restbps <- heart[,4]
restbps
#cholestrole serum cholestoral in mg/dl
print ("Cholestrole")
Cholestrole <- heart[,5]
Cholestrole
#Target 0 or 1
print ("Target")
Target <- heart[,14]
Target
##1) Save the data to a CSV file.
## This is heart data from kaggle for sample of people with heart disease include some medical informations from Clevland Research Center database, can be found on kaggle https://www.kaggle.com/ronitf/heart-disease-uci/version/1
heart <- data.frame(read.csv(file = 'C:/Users/Talal/Documents/GitHub/Data_Visualization/heart.csv'))
heart
##2) Create two vectors from two columns from the Dataframe. Be sure to name these appropriately.
#Age Column1
print ("AGE")
age <- heart[,1]
age
#sex Column ,  1 for male ,0 for female ,
print ("SEX")
sex <- heart[,2]
sex
#cheast pain from 0 to 3
print ("CheastPain")
CheastPain <- heart[,3]
CheastPain
#restbps resting blood pressure (in mm Hg on admission to the hospital)
print ("restbps")
restbps <- heart[,4]
restbps
#cholestrole serum cholestoral in mg/dl
print ("Cholestrole")
Cholestrole <- heart[,5]
Cholestrole
#Target 0 or 1
print ("Target")
Target <- heart[,14]
Target
##3) Using a for loop and seq_along, find the mean of the first vector. Store the mean in an appropriate variable.
getMean <- function(x){
for (i in seq_along(x)){
mean <- mean(x)
}
mean
}
AgeMean <- getMean(age)
print("AgeMean")
AgeMean
CholestroleMean <- getMean(Cholestrole)
print("CholestroleMean")
CholestroleMean
CheastPainMean <- getMean(CheastPain)
print("CheastPainMean")
CheastPainMean
restbpsMean <- getMean(restbps)
print("restbpsMean")
restbpsMean
##4) Create a function that when called on each of the elements in your vector, finds the mean. Hint, you will use scoping rules to accumulate two global environment variables.
nr = 0
sum = 0
sumFuntion <- function (x) {
for (i in seq_along(x)){
sum = sum+ (x[i])
}
sum
}
nrFuntion <- function (x) {
for (i in seq_along(x)){
nr = 1 + nr
}
nr
}
getMean2 <- function(v){
a = sumFuntion(v)
b = nrFuntion(v)
mean2 = a/b
}
AgeMean2 <- getMean2(age)
print("AgeMean2")
AgeMean2
CholestroleMean2 <- getMean2(Cholestrole)
print("CholestroleMean2")
CholestroleMean2
CheastPainMean2 <- getMean2(CheastPain)
print("CheastPainMean2")
CheastPainMean2
restbpsMean2 <- getMean2(restbps)
print("restbpsMean2")
restbpsMean2
##5) Using lapply and your own you created in the previous step to find the sum and number of elements of the second vector.
#My second vector had values of Male and female , 1 and 0s , so I used the third vectors as use in my lapply as Cholestrole vectors.
print ("get the mean by the first method")
mytable <- list( Cholestrole)
getMeans <- lapply(mytable,getMean)
getMeans
print("get the mean by the second method by using seperate functions with lapply:")
mytable <- list( Cholestrole)
getMeansLapply <- lapply(mytable,getMean2)
getMeansLapply
